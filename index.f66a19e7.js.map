{"mappings":"spBAAA,IAAAA,EAAAC,EAAA,SAGmE,IAA/DC,EAAW,GASR,SAASC,EAAeC,GAC3B,OAAOA,EAAIC,KAAIC,IAEX,MAAMC,EAASD,EAAKE,UAC8BH,KAAzCI,IACD,MAAMC,EAAWR,EAASS,MAAKC,GAAOA,EAAIH,KAAOA,IACjD,OAAOC,EAAWA,EAASG,KAAO,EAAE,IAG5C,IAAIC,EAYJ,OAVIP,EAAOQ,OAAS,GAChBD,EAAcP,EAAOS,MAAM,EAAG,GAAGC,KAAK,MAAQ,UAC1CH,EAAYC,OAAS,KACrBD,EAAcP,EAAOS,MAAM,EAAG,GAAGC,KAAK,MAAQ,YAGlDH,EAAcP,EAAOQ,OAAS,EAAI,GAAGR,EAAOU,KAAK,WAAa,GAI3D,qLAE4EX,EAAKY,qBAAqBZ,EAAKa,MAAQb,EAAKa,MAAQb,EAAKO,+HAG5GP,EAAKa,MAAQb,EAAKa,MAAQb,EAAKO,0DACxBC,OAAiBR,EAAKc,aAAed,EAAKc,aAAaJ,MAAM,EAAG,GAAK,gDAG9G,IAEAC,KAAK,G,EAvCgB,EAA3BjB,EAAAqB,UAHe,CAAC,gBAAiB,qBAGhBC,MAAKC,IAClBrB,EAAW,IAAIqB,EAAI,GAAGhB,UAAWgB,EAAI,GAAGhB,OAAO,G,uICNnD,MAAMiB,EAAU,mCACVC,EAAM,gCAGL,SAASC,IACZ,MAAMC,EAAa,IAAIC,gBAAgB,CACnCC,QAASL,IAEPM,EAAa,mBAEnB,OADqFC,QAA7EC,IAAI,GAAGP,IAAMK,KAAcH,KAC5BM,MAAM,GAAGR,IAAMK,KAAcH,KAC/BL,MAAKC,IACF,IAAKA,EAAIW,GACL,MAAM,IAAIC,MAAMC,SAASC,QAE7B,OAAOd,EAAIe,MAAM,G,CAKtB,SAASC,EAASC,GACrB,MAAMb,EAAa,IAAIC,gBAAgB,CACnCC,QAASL,EACTiB,SAAU,UAERC,EAAWF,EAAOnC,KAAIsC,GACjBV,MAAM,GAAGR,IAAMkB,KAAShB,KAC1BL,MAAKc,IACF,IAAKA,EAASF,GACV,MAAM,IAAIC,MAAM,uBAAuBC,EAASC,UAEpD,OAAOD,EAASE,MAAM,MAGlC,OAAOM,QAAQC,IAAIH,E","sources":["src/js/film-card.js","src/js/getDataFilm.js"],"sourcesContent":["import { getGenre } from \"./getDataFilm\";\n\nconst params = ['genre/tv/list', 'genre/movie/list'];//параметри для розшифровки genre (жанри фільмів, які приходять у вигляді масиву з ID жанру)\nlet genreArr = [];//масиву даних genre із id і значення жанру\n\ngetGenre(params).then(res => {//функція запиту genre і створення эдиного масиву даних genre із id і значення жанру\n    genreArr = [...res[0].genres, ...res[1].genres]\n}\n);\n\n//getGenre(params) має обовязково запускатись при пешому відкритті сайту, адже без готовох бази жанрів, неможливо буде відобразити коректно розмітку!!!\n\nexport function filmCardMacker(arr) { //функція створення картки фільму\n    return arr.map(item => {\n\n        const genres = item.genre_ids // пошук співпадіння ід у картці фільму із масивом даних genre\n            .map(id => {\n                const genreObj = genreArr.find(obj => obj.id === id);\n                return genreObj ? genreObj.name : '';\n            });\n\n        let genreString;\n\n        if (genres.length > 2) { //формування довжини жанру фільму\n            genreString = genres.slice(0, 2).join(', ') + ', Other';\n            if (genreString.length > 30) {\n                genreString = genres.slice(0, 1).join(', ') + ', Other';\n            }\n        } else {\n            genreString = genres.length > 0 ? `${genres.join(', ')} | ` : '';\n        }\n\n        //розмітка картки фільму\n        return `<li class=\"film\"> \n    <a class=\"film-link\" data-modal-open href=\"javascript:void(0)\">\n        <img loading=\"lazy\" width=\"280\" height=\"398\" src=\"https://image.tmdb.org/t/p/w400${item.poster_path}\" alt=\"${item.title ? item.title : item.name}film cover\"\n            class=\"film__img\">\n            <div class=\"film-body\">\n                <p class=\"film__name\">${item.title ? item.title : item.name}</p>\n                <p class=\"film__description\">${genreString} | ${item.release_date ? item.release_date.slice(0, 4) : 'TBD'}</p>\n            </div>\n    </a>\n</li>`\n    }\n    ).join('')\n}","const API_KEY = '936b81ad25b58d3805a3200306ab9278';\nconst URL = \"https://api.themoviedb.org/3/\";\n\n\nexport function getDataFilm() { //функція запиту карток фільмів за трендом\n    const parameters = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const trendParam = 'trending/all/day' //доп аргумент для запиту по трендам який має знаходитись у самому посиланні, неможливо додати у змінну parameters\n    console.log(`${URL}${trendParam}?${parameters}`)\n    return fetch(`${URL}${trendParam}?${parameters}`)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error(response.status);\n            }\n            return res.json()\n        })\n};\n\n\nexport function getGenre(params) { //функція запиту genre і створення эдиного масиву даних genre із id і значення жанру\n    const parameters = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n    });\n    const promises = params.map(param => {\n        return fetch(`${URL}${param}?${parameters}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            });\n    });\n    return Promise.all(promises);\n}"],"names":["$kjdRC","parcelRequire","$51ee35a5f0c6e6fb$var$genreArr","$51ee35a5f0c6e6fb$export$7f8dd55dded961b3","arr","map","item","genres","genre_ids","id","genreObj","find","obj","name","genreString","length","slice","join","poster_path","title","release_date","getGenre","then","res","$ec9056116879517f$var$API_KEY","$ec9056116879517f$var$URL","$ec9056116879517f$export$d1e0b74d9a946659","parameters","URLSearchParams","api_key","trendParam","console","log","fetch","ok","Error","response","status","json","$ec9056116879517f$export$11ff5302ebb1cd30","params","language","promises","param","Promise","all"],"version":3,"file":"index.f66a19e7.js.map"}