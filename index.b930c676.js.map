{"mappings":"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","sources":["src/js/ApiRequest.js","src/js/startFetch.js","src/js/about-film-modal.js","src/js/modal.js"],"sourcesContent":["const popularFilm = ['movie/popular']; // тренди для початкового запиту\nconst searchMovie = 'search/movie';// тпошук по назві фільму\nconst movieDetails = 'movie/' //'movie/${ID}' // детальна інформація по фільму із ID Куди записувати ID фільму?\nconst genre = ['genre/tv/list', 'genre/movie/list']; // Для створення масиву жанрів із ID\n\nexport default {\n    popularFilm,\n    searchMovie,\n    movieDetails,\n    genre\n}","import { getDataFilm } from './getDataFilm';\nimport { filmCardMacker } from './film-card';\nconst filmList = document.querySelector('.films-list'); // галерея карток з фільмами\nimport ApiRequest from './ApiRequest';\nimport { Notify } from 'notiflix';\nimport btn from './modal'\n\n\n// currentCollection:\n// Назва колекції за ключовим словом - currentSearchMovieCollection\n// або\n// Назва колекції популярних фільмів - topFilmsCollection\nlet currentCollection = 'topFilmsCollection'; // назва колекції по дефолту\nlet activePageCollection = 1; // номер активної сторінки по дефолту\nlet querySearch = ''; // параметр для пошуку\n\ngetDataFilm(ApiRequest.popularFilm, { language: 'en-US' }).then(\n  ({ results }) => {\n    // запит по трендам + запит на вставку карток у films-list\n    console.log(results);\n    filmList.innerHTML = filmCardMacker(results);\n    currentCollection = 'topFilmsCollection';\n    return;\n  }\n);\n\nconst inputSearchEll = document.querySelector('.header-nav__input'); // посилання на інпут для вводу ключового слова для пошуку\nconsole.log('inputSearchEll----', inputSearchEll);\nconst messageErrorEll = document.querySelector('.header-error-text'); // посилання абзац з повідомленням щодо невдалого пошуку\n\nlet timeoutId;\ninputSearchEll.addEventListener('input', function () {\n  clearTimeout(timeoutId);\n  timeoutId = setTimeout(function () {\n    // викликати функцію, яку потрібно запустити\n    querySearch = inputSearchEll.value.trim();\n    console.log('querySearch ---', querySearch, querySearch.length);\n    if (querySearch.length === 0) {\n      clearTimeout(timeoutId);\n      return Notify.info('введіть текст для пошуку кінофільмів');\n    }\n\n    getDataFilm(ApiRequest.searchMovie, { query: querySearch }).then(\n      ({ results }) => {\n        // запит по трендам + запит на вставку карток у films-list\n        console.log(results);\n        if (results.length === 0) {\n          clearTimeout(timeoutId)\n          messageErrorEll.classList.remove(\"visually-hidden\");\n          return;\n        }\n        filmList.innerHTML = filmCardMacker(results);\n        currentCollection = 'currentSearchMovieCollection';\n        messageErrorEll.classList.add(\"visually-hidden\");\n        return;\n      }\n    );\n\n    console.log('Текст був введений більше ніж 2 секунди тому.');\n  }, 1500);\n});\n\n//При переході на кожну сторінку малювати відповідну частину фільмів\n\nconst activePagePaginationEll = document.querySelector('.page--active'); // посилання на активну сторінку пагінації\nconsole.log('activePagePaginationEll----', activePagePaginationEll);\n\nactivePageCollection = Number(activePagePaginationEll.textContent);\nconsole.log(activePageCollection);\n\nactivePagePaginationEll.addEventListener('click', function (e) {\n  switch (currentCollection) {\n    case 'topFilmsCollection':\n      getDataFilm(ApiRequest.popularFilm, {\n        language: 'en-US',\n        page: activePageCollection,\n      }).then(({ results }) => {\n        // запит по трендам + запит на вставку карток у films-list\n        console.log(results);\n\n        filmList.innerHTML = filmCardMacker(results);\n        return;\n      });\n      break;\n    case 'currentSearchMovieCollection':\n      getDataFilm(ApiRequest.searchMovie, {\n        query: querySearch,\n        page: activePageCollection,\n      }).then(({ results }) => {\n        // запит по трендам + запит на вставку карток у films-list\n        console.log(results);\n        filmList.innerHTML = filmCardMacker(results);\n        return;\n      });\n      break;\n\n    default:\n      console.log('Упс, щось пішло не так');\n      break;\n  }\n});\n\n\n","import { getDataFilm } from './getDataFilm';\nimport ApiRequest from './ApiRequest';\nimport { DatabaseAPI } from './Firebase-storage';\nimport { forWatched, forQueue } from './library'\nconst DatabaseAPIstorage = new DatabaseAPI;\nconst libRef = document.querySelector('.header-nav__title--lib');\n\nlet watchedBtn;\nlet queueBtn;\n\n// if (!localStorage.getItem(\"watchedID\") || !localStorage.getItem(\"queueId\")) {\n//   localStorage.setItem((\"watchedID\"), JSON.stringify([1]))\n//   localStorage.setItem((\"queueId\"), JSON.stringify([1]))\n// }\n\n\nexport async function cardFilmMacker({ id, poster, genres, title, original, popularity, average, count }) {\n  const filmcard = document.querySelector('.about-film');\n\n  try {\n    const { overview } = await getDataFilm(`${ApiRequest.movieDetails}${id}`, { language: 'en-US' });\n    const videos = await getDataFilm(`${ApiRequest.movieDetails}${id}/videos`, { language: 'en-US' });\n    const watchedList = await DatabaseAPIstorage.getWatchedList();\n    const queuedList = await DatabaseAPIstorage.getQueueList();\n    const trailer = `https://www.youtube.com/watch?v=${videos.results[0].key}`;\n\n    // const localStorageDataWatch = JSON.parse(localStorage.getItem(\"watchedID\"))\n    // const localStorageDataQueue = JSON.parse(localStorage.getItem(\"queueId\"))\n    let watchedTextBt;\n    let queueTextBt;\n\n    // if (localStorageDataWatch.includes(id)) {\n    //   watchedTextBt = 'remove at Watched';\n    // }\n    // if (localStorageDataQueue.includes(id)) {\n    //   queueTextBt = 'remove at queue';\n    // }\n\n    if (watchedList.includes(id)) {\n      watchedTextBt = 'remove at Watched';\n    }\n    if (queuedList.includes(id)) {\n      queueTextBt = 'remove at queue';\n    }\n\n\n    filmcard.innerHTML = `\n      <img class=\"about-film__img\" src=\"${poster}\" />\n      <div class=\"about-film__body\">\n        <h3 class=\"film__title\">${title}</h3>\n        <div class=\"film-atributes\">\n          <ul class=\"film-properties\">\n            <li class=\"film-properties__item\">\n              <p class=\"property\">Vote / Votes</p>\n            </li>\n            <li class=\"film-properties__item\">\n              <p class=\"property\">Popularity</p>\n            </li>\n            <li class=\"film-properties__item\">\n              <p class=\"property\">Original Title</p>\n            </li>\n            <li class=\"film-properties__item\">\n              <p class=\"property\">Genre</p>\n            </li>\n          </ul>\n          <ul class=\"film-value\">\n            <li class=\"film-value__item\">\n              <p class=\"value\">\n                <span class=\"value--red\">${average}</span><span class=\"value--gray\"> / </span>\n                <span class=\"value--gray-bg\">${count}</span>\n              </p>\n            </li>\n            <li class=\"film-value__item\">\n              <p class=\"value\">${popularity}</p>\n            </li>\n            <li class=\"film-value__item\">\n              <p class=\"value\">${original}</p>\n            </li>\n            <li class=\"film-value__item\">\n              <p class=\"value\">${genres}</p>\n            </li>\n          </ul>\n        </div>\n        <div class=\"about-film__description\">\n          <h4 class=\"description__title\">About</h4>\n          <p class=\"description\">${overview}</p>\n        </div>\n        <div class=\"youtube-container\">\n          <a href=\"${trailer}\" class=\"youtube-link tube\" data-modal-close>Trailer</a>\n        </div>\n        <div class=\"button__wrapper\" id=\"buttonWrapper\">\n  <button data-id=\"${id}\" class=\"add-to-watched\" type=\"button\" data-value=\"${watchedTextBt ? 'add' : 'no'}\" id=\"btn-watched\">\n    ${watchedTextBt ? watchedTextBt : 'add to Watched'}\n  </button>\n  <button data-id=\"${id}\" class=\"add-to-queue\" type=\"button\" data-value=\"${queueTextBt ? 'add' : 'no'}\" id=\"btn-queue\">\n    ${queueTextBt ? queueTextBt : 'add to queue'}\n  </button>\n                </div>\n            </div>`\n    watchedBtn = document.querySelector('#btn-watched');\n    queueBtn = document.querySelector('#btn-queue');\n    watchedBtn.addEventListener('click', hendleWatchedBtn);\n    queueBtn.addEventListener('click', hendleQueueBtn);\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\nasync function hendleWatchedBtn({ target }) {\n\n  const add = \"add\"\n  const no = \"no\"\n  const id = target.dataset.id;\n\n  if (target.dataset.value === add) {\n    DatabaseAPIstorage.removeMovieFromWatched(id)\n    // const arrWithOutId = JSON.parse(localStorage.getItem(\"watchedID\")).filter(value => value !== id && value !== 1);\n    // localStorage.setItem((\"watchedID\"), JSON.stringify(arrWithOutId));\n    target.textContent = 'add to Watched';\n    target.dataset.value = 'no';\n    if (libRef.classList.contains('header-nav__title--active')) {\n      await forWatched();\n    }\n  } else {\n    DatabaseAPIstorage.addToWatched(id)\n    // let arrAllId = [];\n    // JSON.parse(localStorage.getItem(\"watchedID\")).map(i => arrAllId.push(i));\n    // arrAllId.push(id);\n    // localStorage.setItem((\"watchedID\"), JSON.stringify(arrAllId));\n    target.textContent = 'remove at Watched';\n    target.dataset.value = 'add';\n  }\n}\n\nasync function hendleQueueBtn({ target }) {\n  const add = \"add\"\n  const no = \"no\"\n  const id = target.dataset.id;\n\n  if (target.dataset.value === add) {\n    DatabaseAPIstorage.removeMovieFromQueue(id)\n    // const arrWithOutId = JSON.parse(localStorage.getItem(\"queueId\")).filter(value => value !== id && value !== 1);\n    // localStorage.setItem((\"queueId\"), JSON.stringify(arrWithOutId));\n    target.textContent = 'add to queue';\n    target.dataset.value = 'no';\n\n    if (libRef.classList.contains('header-nav__title--active')) {\n      await forQueue();\n    }\n  } else {\n    DatabaseAPIstorage.addToQueue(id)\n    // let arrAllId = [];\n    // JSON.parse(localStorage.getItem(\"queueId\")).map(i => arrAllId.push(i));\n    // arrAllId.push(id);\n    // localStorage.setItem((\"queueId\"), JSON.stringify(arrAllId));\n    target.textContent = 'remove at queue';\n    target.dataset.value = 'add';\n\n  }\n}\n","import { cardFilmMacker } from './about-film-modal'\n\ndocument.addEventListener('DOMContentLoaded', function (e) {\n  e.preventDefault();\n  const modals = ['data-modal', 'team-modal'];\n\n  modals.forEach(element => {\n    const openModalSelector = element + \"-open\";\n    const closeModalSelector = element + \"-close\";\n    const modal = document.querySelector(\"[\" + element + \"]\");\n    if (!modal) logModalError(\"Can`t find Modal with attribute \" + modal);\n\n    // Додаємо обробник подій на батьківський елемент, для оновлення посилань\n    const parentElement = document.body;\n    parentElement.addEventListener(\"click\", function (event) {\n      const target = event.target;\n      const openModalBtn = target.closest(\"[\" + openModalSelector + \"]\");\n      const closeModalBtn = target.closest(\"[\" + closeModalSelector + \"]\");\n      if (openModalBtn) {\n        if (target.className === 'film__img') {\n          cardFilmMacker(target.dataset)\n        }\n        toggleModal();\n      } else if (closeModalBtn) {\n        toggleModal();\n      }\n    });\n\n    function toggleModal() {\n      document.body.classList.toggle(\"modal-open\");\n      modal.classList.toggle(\"is-hidden\");\n    }\n  });\n}, false);\n\nfunction logModalError(text) {\n  const styles = \"color: #BADA55\";\n  console.log(\"%c\" + text, styles);\n}\n"],"names":["$bd8061b0a7668aa0$export$2e2bcd8739ae039","$gxwgI","parcelRequire","$b3ba46509f6ab2d1$var$DatabaseAPIstorage","$l2HVM","DatabaseAPI","$b3ba46509f6ab2d1$var$libRef","document","querySelector","$b3ba46509f6ab2d1$var$watchedBtn","$b3ba46509f6ab2d1$var$queueBtn","async","$b3ba46509f6ab2d1$export$98c06fbfb69db088","id","poster","genres","title","original","popularity","average","count","filmcard","overview","getDataFilm","$ggI8S","default","movieDetails","language","videos","watchedList","getWatchedList","queuedList","getQueueList","trailer","results","key","watchedTextBt","queueTextBt","includes","innerHTML","addEventListener","$b3ba46509f6ab2d1$var$hendleWatchedBtn","$b3ba46509f6ab2d1$var$hendleQueueBtn","error","console","log","target","dataset","value","removeMovieFromWatched","textContent","classList","contains","$5rHMg","forWatched","addToWatched","removeMovieFromQueue","forQueue","addToQueue","e","preventDefault","forEach","element","openModalSelector","closeModalSelector","modal","text","styles","$fa7a60d60ed0fb7b$var$logModalError","toggleModal","body","toggle","event","openModalBtn","closest","closeModalBtn","className","$1e78404af9f34895$var$filmList","$1e78404af9f34895$var$currentCollection","$1e78404af9f34895$var$activePageCollection","$1e78404af9f34895$var$querySearch","popularFilm","then","$3nfqI","filmCardMacker","$1e78404af9f34895$var$inputSearchEll","$1e78404af9f34895$var$messageErrorEll","$1e78404af9f34895$var$timeoutId","clearTimeout","setTimeout","trim","length","$19McP","Notify","info","searchMovie","query","remove","add","$1e78404af9f34895$var$activePagePaginationEll","Number","page"],"version":3,"file":"index.b930c676.js.map"}